{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "plugins": ["max-params-no-constructor"],
    "env": {
        "es6": true
    },
    "overrides": [
      {
        "files": ["*.ts"],
        "parserOptions": {
          "project": ["tsconfig.json", "e2e/tsconfig.json"],
          "createDefaultProgram": true
        },
        "extends": [
          "plugin:@angular-eslint/ng-cli-compat",
          "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
          "plugin:@angular-eslint/template/process-inline-templates",
          "plugin:diff/diff"
        ],
        "rules": {
          "@angular-eslint/component-class-suffix": [
            "error",
            {
              "suffixes": ["Page", "Component"]
            }
          ],
          "@typescript-eslint/naming-convention": [
            "off",
            {
              "selector": "variable",
              "format": ["camelCase"]
            }
          ],
          "@angular-eslint/component-selector": [
            "error",
            {
              "type": "element",
              "prefix": "app",
              "style": "kebab-case"
            }
          ],
          "@angular-eslint/directive-selector": [
            "error",
            {
              "type": "attribute",
              "prefix": "app"
            }
          ],
          "indent": ["error", 2],
          "semi": "error",
          "no-underscore-dangle": "off",
          "@angular-eslint/template/no-negated-async": "off",
          "@typescript-eslint/prefer-for-of": "off",
          "prefer-arrow/prefer-arrow-functions": "off",
          "@typescript-eslint/ban-types": [
            "error",
            {
              "types": {
                // add a custom message, AND tell the plugin how to fix it
                "String": {
                  "message": "Use string instead",
                  "fixWith": "string"
                },
                "Number": {
                  "message": "Use number instead",
                  "fixWith": "number"
                },
                "Boolean": {
                  "message": "Use boolean instead",
                  "fixWith": "boolean"
                }
              }
            }
          ],
          "@typescript-eslint/consistent-type-assertions": "off",
          "@angular-eslint/no-conflicting-lifecycle": "off",
          "lines-between-class-members": ["error", "always"],
          "@typescript-eslint/no-shadow": "off",
          "complexity": [2, 10],
          "max-depth": ["error", 4],
          "max-params-no-constructor/max-params-no-constructor": ["error", 4],
          "max-len": "off",
          "space-before-function-paren": "off",
          "@typescript-eslint/quotes": "off",
          "linebreak-style": "off",
          "key-spacing": ["error", { "beforeColon": false }],
          "keyword-spacing": ["error", { "before": true }],
          "brace-style": "error",
          "no-trailing-spaces": "error",
          "no-console": ["error", {"allow": [""]}],
          "no-debugger": "warn",
          "@typescript-eslint/no-inferrable-types": "off",
          "@typescript-eslint/no-namespace": "off",
          "max-nested-callbacks": [2,3]
        }
      },
      {
        "files": ["*.html"],
        "extends": ["plugin:@angular-eslint/template/recommended"],
        "rules": {
          "@angular-eslint/template/no-negated-async": "off"
        }
      }
    ]
  }
  